#!/usr/bin/env bash

set -e


if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

## error

function report {
  publish_log "$LOG"
  log_url="$LOG_URL/$(basename $LOG)"
  message="schedule master jobs failed

check $log_url for more information"

  ghi open -m "$message" -- $MONITOR_REPO
}

trap report ERR

## init

# before `getopts`, so that defaults can be overwritten
source "$PROG_HOME/bin/config"

LOG="$PROG_HOME/logs/$(date +%m-%d).out"
LAST="$PROG_HOME/data/LAST_SCHEDULED"
FROM_COMMIT=$(cat "$LAST")

# make sure log file exists
touch "$LOG"

cd "$PROG_HOME/dotty"
git fetch origin master

merge_commits=$(git log --merges --pretty=format:'%h,%an,%ad,%s' $FROM_COMMIT..origin/master --reverse)

while IFS= read -r commit_line
do
  commit=$(echo $commit_line | cut -d',' -f1)
  author=$(echo $commit_line | cut -d',' -f2)
  time=$(echo $commit_line | cut -d',' -f3)

  if [[ $commit_line == *"Merge pull request #"* ]]; then
    pr=$(echo $commit_line | cut -d',' -f4 | grep -o 'pull request #[0-9]\+' | grep -o '[0-9]\+')

    # 1. avoiding rescheduling of same commit
    # 2. avoiding scheduling of already tested merges
    #
    # Achieve the above by
    # 1. remember the last scheduled commit
    # 2. schedule new jobs from the last scheduled commit
    job="$PROG_HOME/jobs/work-merge-$pr.job"
    echo "bin/gauge $pr $commit && bin/deploy" > "$job"

    # test dotty-sbt every 10 PRs on average
    test_sbt=$((RANDOM % 100 < 10))
    if [[ $test_sbt -eq 1 ]]; then
      echo "bin/gauge -p profiles/sbt.plan $pr $commit && bin/deploy" >> "$job"
    fi

    echo $commit > "$LAST"
  fi
done <<< "$merge_commits"

